<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yks.urc.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.yks.urc.entity.RoleDO">
        <id column="role_id" jdbcType="CHAR" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="is_active" jdbcType="TINYINT" property="isActive"/>
        <result column="is_authorizable" jdbcType="TINYINT" property="isAuthorizable"/>
        <result column="is_forever" jdbcType="TINYINT" property="isForever"/>
        <result column="effective_time" jdbcType="TIMESTAMP" property="effectiveTime"/>
        <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy"/>
    </resultMap>
    <sql id="Base_Column_List">
    role_id, role_name, is_active, is_authorizable, is_forever, effective_time, expire_time, 
    created_time, created_by, updated_time, updated_by
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from urc_role
        where role_id = #{roleId,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from urc_role
    where role_id = #{roleId,jdbcType=CHAR}
  </delete>

    <insert id="insert" parameterType="com.yks.urc.entity.RoleDO">
    insert into urc_role
     (role_id, role_name, is_active,
      is_authorizable, is_forever, effective_time,
      expire_time, created_time, created_by,
      updated_time, updated_by)
    values
     (#{roleId,jdbcType=CHAR}, #{roleName,jdbcType=VARCHAR}, #{isActive,jdbcType=TINYINT},
      #{isAuthorizable,jdbcType=TINYINT}, #{isForever,jdbcType=TINYINT}, #{effectiveTime,jdbcType=TIMESTAMP},
      #{expireTime,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR},
      #{updatedTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR})
  </insert>

    <update id="update" parameterType="com.yks.urc.entity.RoleDO">
        update urc_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="isActive != null">
                is_active = #{isActive,jdbcType=TINYINT},
            </if>
            <if test="isAuthorizable != null">
                is_authorizable = #{isAuthorizable,jdbcType=TINYINT},
            </if>
            <if test="isForever != null">
                is_forever = #{isForever,jdbcType=TINYINT},
            </if>
            <if test="effectiveTime != null">
                effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="expireTime != null">
                expire_time = #{expireTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                updated_by = #{updatedBy,jdbcType=VARCHAR},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yks.urc.entity.RoleDO">
    update urc_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      is_active = #{isActive,jdbcType=TINYINT},
      is_authorizable = #{isAuthorizable,jdbcType=TINYINT},
      is_forever = #{isForever,jdbcType=TINYINT},
      effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
      expire_time = #{expireTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=CHAR}
  </update>
</mapper>