<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yks.urc.mapper.IYksTaskLogMapper">
  <resultMap id="BaseResultMap" type="com.yks.urc.entity.YksTaskLogVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="log_level" jdbcType="TINYINT" property="logLevel" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="creator_ip" jdbcType="VARCHAR" property="creatorIp" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yks.urc.entity.YksTaskLogVO">
    <result column="msg" jdbcType="LONGVARCHAR" property="msg" />
  </resultMap>
  <sql id="Base_Column_List">
    id, task_id, log_level, creator, created_time,creator_ip,logger
  </sql>
  <sql id="Blob_Column_List">
    msg
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from yks_task_log
    where id = #{id,jdbcType=BIGINT}
  </select>

    <select id="selectByLogger" resultMap="ResultMapWithBLOBs">
      select
      <include refid="Base_Column_List" />
      ,
      <include refid="Blob_Column_List" />
      from yks_task_log
      where logger=#{logger}
      order by created_time desc
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from yks_task_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yks.urc.entity.YksTaskLogVO">
    insert into yks_task_log (id, task_id, log_level, 
      creator, created_time, msg
      )
    values (#{id,jdbcType=BIGINT}, #{taskId,jdbcType=BIGINT}, #{logLevel,jdbcType=TINYINT}, 
      #{creator,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{msg,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yks.urc.entity.YksTaskLogVO">
    insert into yks_task_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      logger,
      <if test="logLevel != null">
        log_level,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="creatorIp != null">
        creator_ip,
      </if>
        created_time,
      <if test="msg != null">
        msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      #{logger},
      <if test="logLevel != null">
        #{logLevel,jdbcType=TINYINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorIp != null">
        #{creatorIp,jdbcType=VARCHAR},
      </if>
      now(3),
      <if test="msg != null">
        #{msg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yks.urc.entity.YksTaskLogVO">
    update yks_task_log
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="logLevel != null">
        log_level = #{logLevel,jdbcType=TINYINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yks.urc.entity.YksTaskLogVO">
    update yks_task_log
    set task_id = #{taskId,jdbcType=BIGINT},
      log_level = #{logLevel,jdbcType=TINYINT},
      creator = #{creator,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      msg = #{msg,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yks.urc.entity.YksTaskLogVO">
    update yks_task_log
    set task_id = #{taskId,jdbcType=BIGINT},
      log_level = #{logLevel,jdbcType=TINYINT},
      creator = #{creator,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>