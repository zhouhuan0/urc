<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yks.urc.mapper.IUserRoleMapper">
  <resultMap id="BaseResultMap" type="com.yks.urc.entity.UserRoleDO">
    <id column="user_role_id" jdbcType="CHAR" property="userRoleId" />
    <result column="role_id" jdbcType="CHAR" property="roleId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_role_id, role_id, user_name, created_by, created_time, updated_by, updated_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from urc_user_role
    where user_role_id = #{userRoleId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from urc_user_role
    where user_role_id = #{userRoleId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.yks.urc.entity.UserRoleDO">
    insert into urc_user_role (user_role_id, role_id, user_name, 
      created_by, created_time, updated_by, 
      updated_time)
    values (#{userRoleId,jdbcType=CHAR}, #{roleId,jdbcType=CHAR}, #{userName,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, 
      #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yks.urc.entity.UserRoleDO">
    insert into urc_user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userRoleId != null">
        user_role_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userRoleId != null">
        #{userRoleId,jdbcType=CHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yks.urc.entity.UserRoleDO">
    update urc_user_role
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_role_id = #{userRoleId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yks.urc.entity.UserRoleDO">
    update urc_user_role
    set role_id = #{roleId,jdbcType=CHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where user_role_id = #{userRoleId,jdbcType=CHAR}
  </update>
</mapper>