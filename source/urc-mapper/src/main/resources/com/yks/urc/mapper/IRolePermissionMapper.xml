<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yks.urc.mapper.IRolePermissionMapper">
  <resultMap id="BaseResultMap" type="com.yks.urc.entity.RolePermissionDO">
    <id column="role_permission_id" jdbcType="CHAR" property="rolePermissionId" />
    <result column="role_id" jdbcType="CHAR" property="roleId" />
    <result column="sys_key" jdbcType="CHAR" property="sysKey" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yks.urc.entity.RolePermissionDO">
    <result column="selected_context" jdbcType="LONGVARCHAR" property="selectedContext" />
  </resultMap>
  <sql id="Base_Column_List">
    role_permission_id, role_id, sys_key, created_time, created_by, updated_time, updated_by
  </sql>
  <sql id="Blob_Column_List">
    selected_context
  </sql>


  <!--批量删除-->
  <delete id="deleteBatch" parameterType="java.util.List">
    delete from urc_role_permission where role_id in
    <foreach collection="list" item = "roleId" open="(" separator="," close=")">
      #{ roleId}
    </foreach>
  </delete>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from urc_role_permission
    where role_permission_id = #{rolePermissionId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from urc_role_permission
    where role_permission_id = #{rolePermissionId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.yks.urc.entity.RolePermissionDO">
    insert into urc_role_permission (role_permission_id, role_id, sys_key, 
      created_time, created_by, updated_time, 
      updated_by, selected_context)
    values (#{rolePermissionId,jdbcType=CHAR}, #{roleId,jdbcType=CHAR}, #{sysKey,jdbcType=CHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{selectedContext,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yks.urc.entity.RolePermissionDO">
    insert into urc_role_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rolePermissionId != null">
        role_permission_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="sysKey != null">
        sys_key,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="selectedContext != null">
        selected_context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rolePermissionId != null">
        #{rolePermissionId,jdbcType=CHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=CHAR},
      </if>
      <if test="sysKey != null">
        #{sysKey,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="selectedContext != null">
        #{selectedContext,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yks.urc.entity.RolePermissionDO">
    update urc_role_permission
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=CHAR},
      </if>
      <if test="sysKey != null">
        sys_key = #{sysKey,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="selectedContext != null">
        selected_context = #{selectedContext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where role_permission_id = #{rolePermissionId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yks.urc.entity.RolePermissionDO">
    update urc_role_permission
    set role_id = #{roleId,jdbcType=CHAR},
      sys_key = #{sysKey,jdbcType=CHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      selected_context = #{selectedContext,jdbcType=LONGVARCHAR}
    where role_permission_id = #{rolePermissionId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yks.urc.entity.RolePermissionDO">
    update urc_role_permission
    set role_id = #{roleId,jdbcType=CHAR},
      sys_key = #{sysKey,jdbcType=CHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR}
    where role_permission_id = #{rolePermissionId,jdbcType=CHAR}
  </update>
</mapper>