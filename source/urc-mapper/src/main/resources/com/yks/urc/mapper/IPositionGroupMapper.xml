<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yks.urc.mapper.IPositionGroupMapper">

    <select id="getPermissionGroupByUser" resultType="com.yks.urc.entity.PositionGroupVO">
        select
        (select pg.group_name from urc_position_group pg where pg.group_id = t.group_id and pg.is_delete = 0 limit 1) groupName,
        (select pg.create_time from urc_position_group pg where pg.group_id = t.group_id and pg.is_delete = 0 limit 1) createdTime,
        (select group_concat(ur.role_name) from urc_role ur left join urc_position_group pg on ur.role_id =
        pg.position_id where pg.group_id = t.group_id and pg.is_delete = 0) positionNames,
        t.group_id groupId
        from (select distinct t.group_id
        from urc_position_group t
        <include refid="gropCondition"/>
        order by t.id desc
        ) t
        limit #{currIndex},#{pageSize}
    </select>

    <select id="getPermissionGroupByUserCount" resultType="java.lang.Integer">
        select
        count(distinct t.group_id)
        from urc_position_group t
        <include refid="gropCondition"/>
    </select>
    <sql id="gropCondition">
        where
        t.is_delete = 0
        <if test="userName != null and userName != ''">
            and t.creator = #{userName}
        </if>
        <if test="groupName != null and groupName != ''">
            and t.group_name = #{groupName}
        </if>
    </sql>

    <delete id="deletePermissionGroup" parameterType="java.lang.String">
        delete from urc_position_group
        where group_id = #{groupId}
    </delete>

    <select id="existSuperAdmin" resultType="boolean">
        select
            count(t.role_id)> 0
        from urc_role t
        where t.is_authorizable = 2
        and  t.role_id in
        <foreach collection="positionIds" item="positionId" open="(" separator="," close=")">
            #{positionId}
        </foreach>
    </select>

    <select id="getPermissionGroupName" resultType="java.lang.String">
        select distinct group_name from urc_position_group where group_id = #{groupId}
    </select>

    <select id="getPositions" resultType="com.yks.urc.vo.UserByPosition">
        select
            t.is_active isActive,
            t.role_id positionId,
            t.role_name positionName
        from urc_role t
            left join  urc_position_group t1 on t.role_id=t1.position_id
        where t1.group_id = #{groupId}
    </select>

    <select id="getSelectedContext" resultType="com.yks.urc.vo.PermissionVO">
         select
            t.sys_key sysKey,
            t.selected_context sysContext
        from urc_group_permission t
        left join urc_permission t1 on t.sys_key = t1.sys_key
        where t.group_id = #{groupId}
        and t1.sys_type = #{sysType}
    </select>

    <select id="getPositionList" resultType="com.yks.urc.vo.UserByPosition">
        select
            t.is_active isActive,
            t.role_id positionId,
            t.role_name positionName
        from urc_role t
        where t.role_type =2
        and t.is_authorizable != 2
        <if test="positionName != null and positionName != ''">
        and t.role_name like CONCAT(CONCAT('%',#{positionName},'%'))
        </if>
    </select>

    <select id="getPositionPermission" resultType="com.yks.urc.vo.PermissionVO">
        select
            sys_key sysKey,
            selected_context sysContext
        from urc_role_permission
        where role_id = #{positionId}
    </select>

    <select id="getPositionInfoByPermitKey" resultType="com.yks.urc.vo.UserByPosition">
        select
           t.permit_name permitName,
           t1.position_id,
        <if test="positionIds != null and positionIds.size() > 0">
           t3.user_name userName,
        </if>
           t2.role_name positionName
        from permit_item_position t1
        left join permit_item_info t on t.permit_key = t1.permit_key
        left join urc_role t2 on t1.position_id = t2.role_id
        <include refid="positionCondition"/>
        limit #{currIndex},#{pageSize}
    </select>

    <select id="getPositionInfoByPermitKeyCount" resultType="int">
        select
        count(*)
        from  permit_item_position t1
        left join permit_item_info t on t.permit_key = t1.permit_key
        left join urc_role t2 on t1.position_id = t2.role_id
        <include refid="positionCondition"/>
    </select>

    <sql id="positionCondition">
        <if test="positionIds != null and positionIds.size() > 0">
            left join urc_user_role t3 on t2.role_id=t3.role_id
        </if>
        where t2.role_type = 2 and t2.is_active = 1 and t.permit_key in
        <foreach collection="lstPermitKey" item="permitKey" open="(" separator="," close=")">
            #{permitKey}
        </foreach>
        <if test="positionIds != null and positionIds.size() > 0">
            and t1.position_id in
            <foreach collection="positionIds" item="positionId" open="(" separator="," close=")">
                #{positionId}
            </foreach>
        </if>
    </sql>
</mapper>